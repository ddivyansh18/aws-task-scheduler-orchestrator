var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { Component } from 'react';
import { Box } from 'grommet';
import { deepMerge } from 'grommet/utils/object';
import { StyledForm } from './StyledForm';
import { filterByFocusable } from '../../utils/dom';
export const FormContext = React.createContext({
    attachToForm: null,
    detachFromForm: null,
    getFieldValue: null,
    getFieldErrors: null,
    onFieldChange: null,
});
const styledComponents = {
    form: StyledForm,
};
/** A Form with built-in validation<br/>
 *`import { Form } from 'grommet-controls';`<br/>
 *`<Form onSubmit={...} />`<br/>
 */
class Form extends Component {
    constructor(props) {
        super(props);
        this.fields = {};
        this.containerRef = React.createRef();
        this.validate = (data) => {
            const errors = {};
            const addError = (key, field, message) => {
                if (!errors[key]) {
                    errors[key] = [];
                }
                let msg;
                if (typeof message === 'function') {
                    msg = message(field.description || field.label || key);
                }
                else {
                    msg = message;
                }
                errors[key].push(msg);
            };
            Object.keys(this.fields).forEach(key => {
                const field = this.fields[key];
                let rules = field.validation;
                if (rules) {
                    if (!Array.isArray(rules)) {
                        rules = [rules];
                    }
                    for (let i = 0; i < rules.length; i += 1) {
                        const rule = rules[i];
                        if (typeof rule === 'function') {
                            const value = data[key];
                            if (Array.isArray(value)) {
                                const arrayErrors = [];
                                value.forEach((_v, index) => {
                                    const message = rule(data, data[key], index);
                                    if (message) {
                                        arrayErrors[index] = message;
                                    }
                                });
                                if (arrayErrors.length) {
                                    addError(key, field, arrayErrors);
                                }
                            }
                            else {
                                const message = rule(data, data[key]);
                                if (message) {
                                    addError(key, field, message);
                                }
                            }
                        }
                        else if (rule !== null && typeof rule === 'object') {
                            if (rule.rule && typeof rule.rule === 'function') {
                                const isValid = rule.rule(data, data[key]);
                                if (!isValid) {
                                    if (typeof rule.message === 'function') {
                                        addError(key, field, rule.message(typeof field.label === 'string' ? field.label : key));
                                    }
                                    else {
                                        addError(key, field, rule.message);
                                    }
                                }
                            }
                        }
                    }
                }
            });
            if (Object.keys(errors).length === 0) {
                return undefined;
            }
            return errors;
        };
        this.onSubmit = event => {
            const { onSubmit, onSubmitError } = this.props;
            const { data } = this.state;
            event.preventDefault();
            const errors = this.validate(data);
            if (!errors) {
                if (onSubmit) {
                    onSubmit(data);
                }
            }
            else {
                if (onSubmitError) {
                    onSubmitError(errors);
                }
                this.setState({ errors, submitted: true });
            }
        };
        this.updateObject = (name, value, e) => {
            this.setState(prevState => {
                const data = Object.assign(Object.assign({}, prevState.data), { [name]: value });
                const { submitted } = this.state;
                const errors = this.validate(data);
                if (this.props.onChange) {
                    this.props.onChange(name, value, e);
                }
                if (errors) {
                    if (this.props.onInvalidForm) {
                        this.props.onInvalidForm(data);
                    }
                }
                else if (this.props.onValidForm) {
                    this.props.onValidForm(data);
                }
                return { data, errors: submitted ? errors : prevState.errors };
            });
        };
        this.attachToForm = (name, props) => {
            this.fields = Object.assign(Object.assign({}, this.fields), { [name]: props });
        };
        this.detachFromForm = name => {
            delete this.fields[name];
        };
        this.getFieldValue = name => this.state.data[name];
        this.getFieldErrors = name => (this.state.errors ? this.state.errors[name] : null);
        this.state = {
            errors: undefined,
            submitted: false,
            data: Object.assign(Object.assign({}, props.initialValues), props.object),
        };
    }
    static getDerivedStateFromProps(nextProps, prevState) {
        if (JSON.stringify(nextProps.object) !== JSON.stringify(prevState.data)) {
            return {
                data: deepMerge(prevState.data, nextProps.object),
            };
        }
        return null;
    }
    componentDidMount() {
        const { focusFirstChild } = this.props;
        if (focusFirstChild) {
            let items = this.containerRef.current.getElementsByTagName('*');
            items = filterByFocusable(items);
            if (items.length > 0) {
                setTimeout(() => {
                    // @ts-ignore
                    items[0].focus();
                }, 0);
            }
        }
    }
    render() {
        const _a = this.props, { 
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        onSubmitError, 
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        onValidForm, 
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        onInvalidForm, 
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        onSubmit, 
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        onChange, className, children, a11yTitle, tag } = _a, rest = __rest(_a, ["onSubmitError", "onValidForm", "onInvalidForm", "onSubmit", "onChange", "className", "children", "a11yTitle", "tag"]);
        let StyledComponent = styledComponents[tag];
        if (!StyledComponent) {
            StyledComponent = StyledForm.withComponent(tag);
            styledComponents[tag] = StyledComponent;
        }
        return (React.createElement(StyledComponent, { className: className, onSubmit: this.onSubmit, "aria-label": a11yTitle },
            React.createElement(Box, { direction: "row" },
                React.createElement(Box, Object.assign({}, rest),
                    React.createElement("div", { ref: this.containerRef },
                        React.createElement(FormContext.Provider, { value: {
                                attachToForm: this.attachToForm,
                                detachFromForm: this.detachFromForm,
                                getFieldValue: this.getFieldValue,
                                getFieldErrors: this.getFieldErrors,
                                onFieldChange: this.updateObject,
                            } }, children))))));
    }
}
Form.defaultProps = {
    focusFirstChild: true,
    onChange: undefined,
    onSubmit: undefined,
    onSubmitError: undefined,
    onInvalidForm: undefined,
    onValidForm: undefined,
    initialValues: {},
    object: {},
    tag: 'form',
    basis: 'medium',
};
export { Form };
//# sourceMappingURL=data:application/json;base64,