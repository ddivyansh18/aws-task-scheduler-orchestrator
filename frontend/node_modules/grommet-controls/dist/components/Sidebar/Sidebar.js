var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Box, Button, Heading, ResponsiveContext } from 'grommet';
import { Menu } from 'grommet-icons/icons/Menu';
/** Collapsible side bar component
 * ```$ npm install grommet-controls
 * import { Sidebar } from 'grommet-controls';
 * <Sidebar title='My title'>
       ...
 * </Sidebar>
 * ```
 */
const Sidebar = (_a) => {
    var { title, width, children, collapsible } = _a, rest = __rest(_a, ["title", "width", "children", "collapsible"]);
    const [collapsed, setCollapsed] = React.useState(undefined);
    const BtnToggle = ({ view }) => collapsible ? (React.createElement(Button, { icon: React.createElement(Menu, null), onClick: () => setCollapsed(view !== 'collapsed') })) : null;
    return (React.createElement(ResponsiveContext.Consumer, null, size => (collapsible && size === 'small' && collapsed === undefined) ||
        collapsed === true ? (React.createElement(Box, { align: "start" },
        React.createElement(BtnToggle, { view: "collapsed" }))) : (React.createElement(Box, Object.assign({ width: width }, rest),
        React.createElement(Box, { pad: { bottom: 'small' }, gap: "small", direction: "row", align: "center" },
            React.createElement(BtnToggle, { view: "expanded" }),
            title && (React.createElement(Box, { flex: false, tag: "header" }, typeof title === 'string' ? (React.createElement(Heading, { margin: "none", level: 3 }, title)) : (title)))),
        children))));
};
Sidebar.defaultProps = {
    title: undefined,
    width: 'medium',
    collapsible: true,
};
export { Sidebar };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lkZWJhci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1NpZGViYXIvU2lkZWJhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDMUIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLGlCQUFpQixFQUFZLE1BQU0sU0FBUyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUdoRDs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxPQUFPLEdBQUcsQ0FBQyxFQU1VLEVBQUUsRUFBRTtRQU5kLEVBQ2YsS0FBSyxFQUNMLEtBQUssRUFDTCxRQUFRLEVBQ1IsV0FBVyxPQUVjLEVBRHRCLElBQUksY0FMUSw2Q0FNaEIsQ0FEUTtJQUVQLE1BQU0sQ0FBQyxTQUFTLEVBQUUsWUFBWSxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM1RCxNQUFNLFNBQVMsR0FBRyxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUM3QixXQUFXLENBQUMsQ0FBQyxDQUFDLENBQ1osb0JBQUMsTUFBTSxJQUNMLElBQUksRUFBRSxvQkFBQyxJQUFJLE9BQUcsRUFDZCxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksS0FBSyxXQUFXLENBQUMsR0FDakQsQ0FDSCxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDWCxPQUFPLENBQ0wsb0JBQUMsaUJBQWlCLENBQUMsUUFBUSxRQUN4QixJQUFJLENBQUMsRUFBRSxDQUNOLENBQUMsV0FBVyxJQUFJLElBQUksS0FBSyxPQUFPLElBQUksU0FBUyxLQUFLLFNBQVMsQ0FBQztRQUM1RCxTQUFTLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNuQixvQkFBQyxHQUFHLElBQUMsS0FBSyxFQUFDLE9BQU87UUFDaEIsb0JBQUMsU0FBUyxJQUFDLElBQUksRUFBQyxXQUFXLEdBQUcsQ0FDMUIsQ0FDUCxDQUFDLENBQUMsQ0FBQyxDQUNGLG9CQUFDLEdBQUcsa0JBQUMsS0FBSyxFQUFFLEtBQUssSUFBTSxJQUFJO1FBQ3pCLG9CQUFDLEdBQUcsSUFDRixHQUFHLEVBQUUsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLEVBQ3hCLEdBQUcsRUFBQyxPQUFPLEVBQ1gsU0FBUyxFQUFDLEtBQUssRUFDZixLQUFLLEVBQUMsUUFBUTtZQUVkLG9CQUFDLFNBQVMsSUFBQyxJQUFJLEVBQUMsVUFBVSxHQUFHO1lBQzVCLEtBQUssSUFBSSxDQUNSLG9CQUFDLEdBQUcsSUFBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBQyxRQUFRLElBQzNCLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FDM0Isb0JBQUMsT0FBTyxJQUFDLE1BQU0sRUFBQyxNQUFNLEVBQUMsS0FBSyxFQUFFLENBQUMsSUFDNUIsS0FBSyxDQUNFLENBQ1gsQ0FBQyxDQUFDLENBQUMsQ0FDRixLQUFLLENBQ04sQ0FDRyxDQUNQLENBQ0c7UUFFTCxRQUFRLENBQ0wsQ0FDUCxDQUV3QixDQUM5QixDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsT0FBTyxDQUFDLFlBQVksR0FBRztJQUNyQixLQUFLLEVBQUUsU0FBUztJQUNoQixLQUFLLEVBQUUsUUFBUTtJQUNmLFdBQVcsRUFBRSxJQUFJO0NBQ2xCLENBQUM7QUFFRixPQUFPLEVBQUUsT0FBTyxFQUFFLENBQUMifQ==