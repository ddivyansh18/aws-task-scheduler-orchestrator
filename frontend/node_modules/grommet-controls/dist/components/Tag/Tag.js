var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { ThemeContext } from 'styled-components';
import { Keyboard, Text } from 'grommet';
import { FormClose } from 'grommet-icons/icons/FormClose';
import { StyledTag, StyledIcon } from './StyledTag';
/**
 * A tag control with a label and icon<br/>
 * `import { Tag } from 'grommet-controls';`<br/>
 * `<Tag label={...} icon={...} />`<br/>
 */
const Tag = React.forwardRef((_a, ref) => {
    var { disabled, label, a11yTitle, reverse, background, onClick, onChange, icon, color, focusable, round, size, truncate } = _a, rest = __rest(_a, ["disabled", "label", "a11yTitle", "reverse", "background", "onClick", "onChange", "icon", "color", "focusable", "round", "size", "truncate"]);
    const clickTag = e => {
        if (!disabled && onClick) {
            onClick(e);
        }
        e.preventDefault();
        e.stopPropagation();
    };
    const toggleTag = e => {
        if (!disabled && onChange) {
            e.preventDefault();
            e.stopPropagation();
            onChange(e);
        }
    };
    const tagRound = round;
    const canFocus = focusable && !disabled && !!(onClick || onChange);
    return (React.createElement(Keyboard, { onEnter: clickTag, onSpace: toggleTag },
        React.createElement(ThemeContext.Consumer, null, theme => {
            let closeIcon;
            if (icon || onChange) {
                closeIcon = (React.createElement(StyledIcon, { theme: theme, disabled: disabled, onClick: onChange }, icon || React.createElement(FormClose, { theme: theme })));
            }
            return (React.createElement(StyledTag, Object.assign({ ref: ref, direction: reverse ? 'row-reverse' : 'row', justify: "between", align: "center", a11yTitle: a11yTitle, round: tagRound, onClick: onClick && clickTag, role: "checkbox", "aria-checked": true, tabIndex: canFocus ? 0 : undefined, background: background, disabled: disabled, theme: theme }, rest),
                reverse && closeIcon,
                React.isValidElement(label) ? (label) : (React.createElement(Text, { color: color, size: size, truncate: truncate }, label && label.toString())),
                !reverse && closeIcon));
        })));
});
Tag.displayName = 'Tag';
Tag.defaultProps = {
    label: 'Text',
    pad: { horizontal: 'xsmall' },
    focusable: true,
};
export { Tag };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVGFnL1RhZy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDMUIsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMxRCxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUdwRDs7OztHQUlHO0FBQ0gsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FDMUIsQ0FDRSxFQWVZLEVBQ1osR0FBRyxFQUNILEVBQUU7UUFqQkYsRUFDRSxRQUFRLEVBQ1IsS0FBSyxFQUNMLFNBQVMsRUFDVCxPQUFPLEVBQ1AsVUFBVSxFQUNWLE9BQU8sRUFDUCxRQUFRLEVBQ1IsSUFBSSxFQUNKLEtBQUssRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLElBQUksRUFDSixRQUFRLE9BRUUsRUFEUCxJQUFJLGNBZFQsNklBZUMsQ0FEUTtJQUlULE1BQU0sUUFBUSxHQUFHLENBQUMsQ0FBQyxFQUFFO1FBQ25CLElBQUksQ0FBQyxRQUFRLElBQUksT0FBTyxFQUFFO1lBQ3hCLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNaO1FBQ0QsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ25CLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN0QixDQUFDLENBQUM7SUFFRixNQUFNLFNBQVMsR0FBRyxDQUFDLENBQUMsRUFBRTtRQUNwQixJQUFJLENBQUMsUUFBUSxJQUFJLFFBQVEsRUFBRTtZQUN6QixDQUFDLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDbkIsQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO1lBQ3BCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNiO0lBQ0gsQ0FBQyxDQUFDO0lBRUYsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLE1BQU0sUUFBUSxHQUFHLFNBQVMsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUMsQ0FBQyxPQUFPLElBQUksUUFBUSxDQUFDLENBQUM7SUFDbkUsT0FBTyxDQUNMLG9CQUFDLFFBQVEsSUFBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxTQUFTO1FBQzdDLG9CQUFDLFlBQVksQ0FBQyxRQUFRLFFBQ25CLEtBQUssQ0FBQyxFQUFFO1lBQ1AsSUFBSSxTQUFTLENBQUM7WUFDZCxJQUFJLElBQUksSUFBSSxRQUFRLEVBQUU7Z0JBQ3BCLFNBQVMsR0FBRyxDQUNWLG9CQUFDLFVBQVUsSUFDVCxLQUFLLEVBQUUsS0FBSyxFQUNaLFFBQVEsRUFBRSxRQUFRLEVBQ2xCLE9BQU8sRUFBRSxRQUFRLElBRWhCLElBQUksSUFBSSxvQkFBQyxTQUFTLElBQUMsS0FBSyxFQUFFLEtBQUssR0FBSSxDQUN6QixDQUNkLENBQUM7YUFDSDtZQUNELE9BQU8sQ0FDTCxvQkFBQyxTQUFTLGtCQUNSLEdBQUcsRUFBRSxHQUFzQyxFQUMzQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFDMUMsT0FBTyxFQUFDLFNBQVMsRUFDakIsS0FBSyxFQUFDLFFBQVEsRUFDZCxTQUFTLEVBQUUsU0FBUyxFQUNwQixLQUFLLEVBQUUsUUFBUSxFQUNmLE9BQU8sRUFBRSxPQUFPLElBQUksUUFBUSxFQUM1QixJQUFJLEVBQUMsVUFBVSxrQkFDRCxJQUFJLEVBQ2xCLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUNsQyxVQUFVLEVBQUUsVUFBVSxFQUN0QixRQUFRLEVBQUUsUUFBUSxFQUNsQixLQUFLLEVBQUUsS0FBSyxJQUNSLElBQUk7Z0JBRVAsT0FBTyxJQUFJLFNBQVM7Z0JBQ3BCLEtBQUssQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQzdCLEtBQUssQ0FDTixDQUFDLENBQUMsQ0FBQyxDQUNGLG9CQUFDLElBQUksSUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLFFBQVEsSUFDL0MsS0FBSyxJQUFJLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FDckIsQ0FDUjtnQkFDQSxDQUFDLE9BQU8sSUFBSSxTQUFTLENBQ1osQ0FDYixDQUFDO1FBQ0osQ0FBQyxDQUNxQixDQUNmLENBQ1osQ0FBQztBQUNKLENBQUMsQ0FDRixDQUFDO0FBRUYsR0FBRyxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7QUFFeEIsR0FBRyxDQUFDLFlBQVksR0FBRztJQUNqQixLQUFLLEVBQUUsTUFBTTtJQUNiLEdBQUcsRUFBRSxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUU7SUFDN0IsU0FBUyxFQUFFLElBQUk7Q0FDaEIsQ0FBQztBQUVGLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyJ9