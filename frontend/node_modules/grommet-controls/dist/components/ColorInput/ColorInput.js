var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { Component } from 'react';
import styled, { ThemeContext } from 'styled-components';
import { StopFill } from 'grommet-icons';
import { MaskedInput } from '../MaskedInput';
import { Colors } from '../Colors';
const StyledColorButton = styled.span `
  display: inline-flex;
  svg {
    border: ${props => `${props.theme.button.border.width} solid ${props.theme.global.colors.border}`};
    fill: ${props => props.selectedColor};
    stroke: ${props => props.selectedColor};
    transition: none;
  }
`;
/** A masked color entry field, with a drop button to select a color<br/>
 * All properties of MaskedInput apply<br/>
 * `import { ColorInput } from 'grommet-controls';`<br/>
 * `<ColorInput colors={...} value={...} />`<br/>
 */
class ColorInput extends Component {
    constructor(props) {
        super(props);
        this.upDateValue = null;
        this.onChange = e => {
            const { onChange } = this.props;
            this.setState({ selectedColor: e.target.value });
            if (onChange) {
                onChange(e);
            }
        };
        this.onSelect = ({ color }) => {
            this.setState({ selectedColor: color });
            this.upDateValue(color);
        };
        this.state = {
            selectedColor: (props.value || props.defaultValue),
        };
    }
    static getDerivedStateFromProps(nextProps) {
        return {
            selectedColor: nextProps.value,
        };
    }
    render() {
        const _a = this.props, { columns, wrap, colors, size } = _a, rest = __rest(_a, ["columns", "wrap", "colors", "size"]);
        const { selectedColor } = this.state;
        return (React.createElement(ThemeContext.Consumer, null, theme => (React.createElement(MaskedInput, Object.assign({ update: update => {
                this.upDateValue = update;
            }, dropIcon: React.createElement(StyledColorButton, { theme: theme, selectedColor: selectedColor },
                React.createElement(StopFill, null)), dropContent: React.createElement(Colors, { color: selectedColor, colors: colors, onSelect: this.onSelect, columns: columns, wrap: wrap, size: size }), onChange: this.onChange }, rest)))));
    }
}
ColorInput.defaultProps = {
    size: 'small',
    mask: [
        '#',
        /[0-9a-fA-F]/,
        /[0-9a-fA-F]/,
        /[0-9a-fA-F]/,
        /[0-9a-fA-F]/,
        /[0-9a-fA-F]/,
        /[0-9a-fA-F]/,
    ],
};
export { ColorInput };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29sb3JJbnB1dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NvbG9ySW5wdXQvQ29sb3JJbnB1dC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUN6QyxPQUFPLE1BQU0sRUFBRSxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFRbkMsTUFBTSxpQkFBaUIsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUF3Qjs7O2NBRy9DLEtBQUssQ0FBQyxFQUFFLENBQ2hCLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssVUFBVSxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFO1lBQ3hFLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLGFBQWE7Y0FDMUIsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsYUFBYTs7O0NBR3pDLENBQUM7QUFLRjs7OztHQUlHO0FBQ0gsTUFBTSxVQUFXLFNBQVEsU0FHeEI7SUFnQkMsWUFBWSxLQUEwRDtRQUNwRSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFIZixnQkFBVyxHQUFHLElBQUksQ0FBQztRQWVuQixhQUFRLEdBQUcsQ0FBQyxDQUFDLEVBQUU7WUFDYixNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNoQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsYUFBYSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztZQUNqRCxJQUFJLFFBQVEsRUFBRTtnQkFDWixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDYjtRQUNILENBQUMsQ0FBQztRQUVGLGFBQVEsR0FBRyxDQUFDLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRTtZQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsYUFBYSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7WUFDeEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQixDQUFDLENBQUM7UUF0QkEsSUFBSSxDQUFDLEtBQUssR0FBRztZQUNYLGFBQWEsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLFlBQVksQ0FBVztTQUM3RCxDQUFDO0lBQ0osQ0FBQztJQUVELE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxTQUFTO1FBQ3ZDLE9BQU87WUFDTCxhQUFhLEVBQUUsU0FBUyxDQUFDLEtBQUs7U0FDL0IsQ0FBQztJQUNKLENBQUM7SUFlRCxNQUFNO1FBQ0osTUFBTSxLQUEyQyxJQUFJLENBQUMsS0FBSyxFQUFyRCxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLElBQUksT0FBd0IsRUFBbkIsSUFBSSxjQUF0QyxxQ0FBd0MsQ0FBYSxDQUFDO1FBQzVELE1BQU0sRUFBRSxhQUFhLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3JDLE9BQU8sQ0FDTCxvQkFBQyxZQUFZLENBQUMsUUFBUSxRQUNuQixLQUFLLENBQUMsRUFBRSxDQUFDLENBQ1Isb0JBQUMsV0FBVyxrQkFDVixNQUFNLEVBQUUsTUFBTSxDQUFDLEVBQUU7Z0JBQ2YsSUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUM7WUFDNUIsQ0FBQyxFQUNELFFBQVEsRUFDTixvQkFBQyxpQkFBaUIsSUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxhQUFhO2dCQUMzRCxvQkFBQyxRQUFRLE9BQUcsQ0FDTSxFQUV0QixXQUFXLEVBQ1Qsb0JBQUMsTUFBTSxJQUNMLEtBQUssRUFBRSxhQUFhLEVBQ3BCLE1BQU0sRUFBRSxNQUFNLEVBQ2QsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQ3ZCLE9BQU8sRUFBRSxPQUFPLEVBQ2hCLElBQUksRUFBRSxJQUFJLEVBQ1YsSUFBSSxFQUFFLElBQUksR0FDVixFQUVKLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUSxJQUNuQixJQUFJLEVBQ1IsQ0FDSCxDQUNxQixDQUN6QixDQUFDO0lBQ0osQ0FBQzs7QUF4RU0sdUJBQVksR0FBRztJQUNwQixJQUFJLEVBQUUsT0FBTztJQUNiLElBQUksRUFBRTtRQUNKLEdBQUc7UUFDSCxhQUFhO1FBQ2IsYUFBYTtRQUNiLGFBQWE7UUFDYixhQUFhO1FBQ2IsYUFBYTtRQUNiLGFBQWE7S0FDZDtDQUNGLENBQUM7QUFnRUosT0FBTyxFQUFFLFVBQVUsRUFBRSxDQUFDIn0=