var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Box, Button, Heading, Meter, Text } from 'grommet';
import { Close } from 'grommet-icons/icons/Close';
import { StatusGood } from 'grommet-icons/icons/StatusGood';
import { StatusWarning } from 'grommet-icons/icons/StatusWarning';
import { StatusCritical } from 'grommet-icons/icons/StatusCritical';
import { StatusUnknown } from 'grommet-icons/icons/StatusUnknown';
import { StatusInfo } from 'grommet-icons/icons/StatusInfo';
import { StatusDisabled } from 'grommet-icons/icons/StatusDisabled';
import { longDate } from '../../utils/moment';
const StatusIcons = {
    ok: StatusGood,
    warning: StatusWarning,
    error: StatusCritical,
    unknown: StatusUnknown,
    disabled: StatusDisabled,
    info: StatusInfo,
};
const SIZE_LEVELS = {
    small: {
        level: 4,
        size: 'xsmall',
        meterSize: 'xsmall',
    },
    medium: {
        level: 3,
        size: 'small',
        meterSize: 'small',
    },
    large: {
        level: 1,
        size: 'medium',
        meterSize: 'large',
    },
};
/**
 * A Box to display notification messages<br/>
 * `import { Notification } from 'grommet-controls';`<br/>
 * `<Notification message={...} onClose={...} />`<br/>
 */
const Notification = (_a) => {
    var { status, message, locale, closer, margin, reverse, a11yTitle, background, border, timestamp, icon, strong, round, pad, size, state, onClose, percentComplete } = _a, rest = __rest(_a, ["status", "message", "locale", "closer", "margin", "reverse", "a11yTitle", "background", "border", "timestamp", "icon", "strong", "round", "pad", "size", "state", "onClose", "percentComplete"]);
    const sizeLevel = SIZE_LEVELS[size];
    let closeBtn;
    if (onClose) {
        const closeIcon = closer || React.createElement(Close, { size: sizeLevel.size });
        closeBtn = (React.createElement(Box, { pad: pad },
            React.createElement(Button, { a11yTitle: a11yTitle, onClick: onClose }, closeIcon)));
    }
    let heading = message;
    if (strong) {
        heading = React.createElement("strong", null, heading);
    }
    let statusIcon;
    if (icon) {
        const StatusIcon = StatusIcons[status];
        statusIcon = React.isValidElement(icon) ? (icon) : (React.createElement(StatusIcon, { size: sizeLevel.size }));
    }
    let progress;
    if (percentComplete || percentComplete === 0) {
        progress = (React.createElement(Box, { direction: "row", align: "center", gap: "medium", style: { whiteSpace: 'nowrap' } },
            React.createElement(Meter, { size: sizeLevel.meterSize, thickness: "small", values: [
                    {
                        label: percentComplete.toFixed(0),
                        value: percentComplete,
                        color: 'accent-1',
                    },
                ] }),
            React.createElement(Text, { size: "small" }, ` ${percentComplete} %`)));
    }
    let timeStamp;
    if (timestamp) {
        timeStamp = longDate(timestamp, locale);
    }
    let first;
    let second;
    if (reverse) {
        first = heading;
        second = statusIcon;
    }
    else {
        first = statusIcon;
        second = heading;
    }
    const content = (React.createElement(Box, { flex: "grow", pad: pad },
        React.createElement(Heading, { level: sizeLevel.level, margin: margin, style: { maxWidth: '100%' } },
            React.createElement(Box, { direction: "row", align: "center", gap: "small" },
                first,
                second)),
        React.createElement(Text, { size: sizeLevel.size }, state),
        React.createElement(Text, { size: sizeLevel.size }, timeStamp),
        progress));
    if (reverse) {
        first = closeBtn;
        second = content;
    }
    else {
        first = content;
        second = closeBtn;
    }
    return (React.createElement(Box, Object.assign({ direction: reverse ? 'row-reverse' : 'row', fill: "horizontal", border: border, round: round, role: "checkbox", "aria-checked": true, background: background || `status-${status}` }, rest),
        first,
        second));
};
Notification.defaultProps = {
    status: 'info',
    size: 'medium',
    message: 'Notification...',
    icon: true,
    animation: 'fadeIn',
    closer: undefined,
    pad: 'small',
    margin: 'small',
    locale: 'en-us',
};
export { Notification };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTm90aWZpY2F0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvTm90aWZpY2F0aW9uL05vdGlmaWNhdGlvbi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDMUIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQVksTUFBTSxTQUFTLENBQUM7QUFDdEUsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM1RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDbEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNsRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUc5QyxNQUFNLFdBQVcsR0FBRztJQUNsQixFQUFFLEVBQUUsVUFBVTtJQUNkLE9BQU8sRUFBRSxhQUFhO0lBQ3RCLEtBQUssRUFBRSxjQUFjO0lBQ3JCLE9BQU8sRUFBRSxhQUFhO0lBQ3RCLFFBQVEsRUFBRSxjQUFjO0lBQ3hCLElBQUksRUFBRSxVQUFVO0NBQ2pCLENBQUM7QUFjRixNQUFNLFdBQVcsR0FBZ0I7SUFDL0IsS0FBSyxFQUFFO1FBQ0wsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLEVBQUUsUUFBUTtRQUNkLFNBQVMsRUFBRSxRQUFRO0tBQ3BCO0lBQ0QsTUFBTSxFQUFFO1FBQ04sS0FBSyxFQUFF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