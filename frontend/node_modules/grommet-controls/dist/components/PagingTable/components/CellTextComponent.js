var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Text } from 'grommet';
export const extractTextProps = (_a) => {
    var { 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    value, 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    color, 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    size, 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    truncate, 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    weight, 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    textAlign } = _a, rest = __rest(_a, ["value", "color", "size", "truncate", "weight", "textAlign"]);
    return rest;
};
export const collectTextProps = ({ color, size, truncate, weight, textAlign, }) => ({
    color,
    size,
    truncate,
    weight,
    textAlign,
});
const CellTextComponent = (_a) => {
    var { value } = _a, rest = __rest(_a, ["value"]);
    return (React.createElement(Text, Object.assign({}, collectTextProps(rest)), value));
};
export default CellTextComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2VsbFRleHRDb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9QYWdpbmdUYWJsZS9jb21wb25lbnRzL0NlbGxUZXh0Q29tcG9uZW50LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMxQixPQUFPLEVBQUUsSUFBSSxFQUFhLE1BQU0sU0FBUyxDQUFDO0FBVzFDLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLENBQUMsRUFjYixFQUFFLEVBQUU7UUFkUztJQUMvQiw2REFBNkQ7SUFDN0QsS0FBSztJQUNMLDZEQUE2RDtJQUM3RCxLQUFLO0lBQ0wsNkRBQTZEO0lBQzdELElBQUk7SUFDSiw2REFBNkQ7SUFDN0QsUUFBUTtJQUNSLDZEQUE2RDtJQUM3RCxNQUFNO0lBQ04sNkRBQTZEO0lBQzdELFNBQVMsT0FFUyxFQURmLElBQUksY0Fid0IsNkRBY2hDLENBRFE7SUFDZ0IsT0FBQSxJQUFJLENBQUE7Q0FBQSxDQUFDO0FBRTlCLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLENBQUMsRUFDL0IsS0FBSyxFQUNMLElBQUksRUFDSixRQUFRLEVBQ1IsTUFBTSxFQUNOLFNBQVMsR0FDQyxFQUFhLEVBQUUsQ0FBQyxDQUFDO0lBQzNCLEtBQUs7SUFDTCxJQUFJO0lBQ0osUUFBUTtJQUNSLE1BQU07SUFDTixTQUFTO0NBQ1YsQ0FBQyxDQUFDO0FBRUgsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLEVBQWtCLEVBQUUsRUFBRTtRQUF0QixFQUFFLEtBQUssT0FBVyxFQUFOLElBQUksY0FBaEIsU0FBa0IsQ0FBRjtJQUFPLE9BQUEsQ0FDaEQsb0JBQUMsSUFBSSxvQkFBSyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFLLENBQVEsQ0FDakQsQ0FBQTtDQUFBLENBQUM7QUFFRixlQUFlLGlCQUFpQixDQUFDIn0=