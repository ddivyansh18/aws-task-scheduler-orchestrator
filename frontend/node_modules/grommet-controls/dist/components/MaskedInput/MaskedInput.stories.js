var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Box, Calendar } from 'grommet';
import { Add, Subtract } from 'grommet-icons';
import { MaskedInput } from './MaskedInput';
import { smallDate } from '../../utils/moment';
export default {
    title: 'input/MaskedInput',
    component: MaskedInput,
};
const MaskedTestBed = (_a) => {
    var { value: defaultValue = '' } = _a, props = __rest(_a, ["value"]);
    const [value, setValue] = React.useState(defaultValue);
    return (React.createElement(Box, { direction: "row" },
        React.createElement(Box, { basis: "medium", gap: "small" },
            React.createElement(MaskedInput, Object.assign({ value: value, onChange: ({ target }) => setValue(target.value) }, props)))));
};
const DateInput = props => {
    const [date, setDate] = React.useState(smallDate(new Date('08/30/2020')));
    return (React.createElement(Box, { direction: "row" },
        React.createElement(Box, { basis: "medium" },
            React.createElement(MaskedInput, Object.assign({ mask: [/\d/, /\d/, '/', /\d/, /\d/, '/', /\d/, /\d/, /\d/, /\d/], dropContent: React.createElement(Box, { pad: "small" },
                    React.createElement(Calendar, { size: "small", date: date, onSelect: isoDate => setDate(smallDate(new Date(isoDate))) })), value: date, onChange: ({ target }) => setDate(target.value) }, props)))));
};
const NumberInput = () => {
    const [number, setNumber] = React.useState(10);
    return (React.createElement(Box, { direction: "row" },
        React.createElement(Box, { basis: "medium" },
            React.createElement(MaskedInput, { value: number, onChange: ({ target: { value } }) => setNumber(parseFloat(value)), mask: MaskedInput.createNumberMask({
                    allowDecimal: true,
                }), widgets: [
                    {
                        icon: React.createElement(Add, null),
                        onClick: () => setNumber(number + 1),
                    },
                    {
                        icon: React.createElement(Subtract, null),
                        onClick: () => setNumber(number - 1),
                    },
                ] }))));
};
export const main = () => (React.createElement(MaskedTestBed, { value: "8024442131", mask: [
        '(',
        /[1-9]/,
        /\d/,
        /\d/,
        ')',
        ' ',
        /\d/,
        /\d/,
        /\d/,
        '-',
        /\d/,
        /\d/,
        /\d/,
        /\d/,
    ] }));
export const a11yTitle = () => (React.createElement(MaskedTestBed, { a11yTitle: "Dollars", mask: MaskedInput.createNumberMask({}), value: "18933.85" }));
export const disabled = () => React.createElement(DateInput, { disabled: true });
export const dropContent = () => React.createElement(DateInput, null);
export const widgets = () => React.createElement(NumberInput, null);
export const plain = () => (React.createElement(MaskedTestBed, { value: "8024442131", mask: [
        '(',
        /[1-9]/,
        /\d/,
        /\d/,
        ')',
        ' ',
        /\d/,
        /\d/,
        /\d/,
        '-',
        /\d/,
        /\d/,
        /\d/,
        /\d/,
    ], plain: true }));
export const focusIndicator = () => (React.createElement(MaskedTestBed, { value: "8024442131", mask: [
        '(',
        /[1-9]/,
        /\d/,
        /\d/,
        ')',
        ' ',
        /\d/,
        /\d/,
        /\d/,
        '-',
        /\d/,
        /\d/,
        /\d/,
        /\d/,
    ], plain: true, focusIndicator: true }));
export const mask = () => (React.createElement(MaskedTestBed, { placeholder: "US phone number with country code", mask: [
        '+',
        '1',
        ' ',
        '(',
        /[1-9]/,
        /\d/,
        /\d/,
        ')',
        ' ',
        /\d/,
        /\d/,
        /\d/,
        '-',
        /\d/,
        /\d/,
        /\d/,
        /\d/,
    ] }));
export const guide = () => (React.createElement(MaskedTestBed, { value: "8024442131", guide: false, mask: [
        '(',
        /[1-9]/,
        /\d/,
        /\d/,
        ')',
        ' ',
        /\d/,
        /\d/,
        /\d/,
        '-',
        /\d/,
        /\d/,
        /\d/,
        /\d/,
    ], plain: true, focusIndicator: true }));
export const pipe = () => (React.createElement(MaskedTestBed, { mask: [
        MaskedInput.alphabetic,
        MaskedInput.digit,
        MaskedInput.alphabetic,
        ' ',
        MaskedInput.digit,
        MaskedInput.alphabetic,
        MaskedInput.digit,
    ], pipe: conformedValue => ({
        value: conformedValue.toUpperCase(),
    }), placeholder: "K1A 0B2", placeholderChar: MaskedInput.placeholderChars.underscore }));
export const placeholderChar = () => (React.createElement(MaskedTestBed, { mask: [
        '(',
        /[1-9]/,
        /\d/,
        /\d/,
        ')',
        ' ',
        /\d/,
        /\d/,
        /\d/,
        '-',
        /\d/,
        /\d/,
        /\d/,
        /\d/,
    ], placeholderChar: MaskedInput.placeholderChars.underscore, value: "8024442131" }));
export const keepCharPositions = () => (React.createElement(MaskedTestBed, { mask: [
        '(',
        /[1-9]/,
        /\d/,
        /\d/,
        ')',
        ' ',
        /\d/,
        /\d/,
        /\d/,
        '-',
        /\d/,
        /\d/,
        /\d/,
        /\d/,
    ], keepCharPositions: true, value: "8024442131" }));
export const showMask = () => (React.createElement(MaskedTestBed, { mask: [
        '(',
        /[1-9]/,
        /\d/,
        /\d/,
        ')',
        ' ',
        /\d/,
        /\d/,
        /\d/,
        '-',
        /\d/,
        /\d/,
        /\d/,
        /\d/,
    ], showMask: true, value: "8024442131" }));
export const placeholder = () => (React.createElement(MaskedTestBed, { mask: [
        '(',
        /[1-9]/,
        /\d/,
        /\d/,
        ')',
        ' ',
        /\d/,
        /\d/,
        /\d/,
        '-',
        /\d/,
        /\d/,
        /\d/,
        /\d/,
    ], placeholder: "Enter phone...", value: "8024442131" }));
export const name = () => (React.createElement(MaskedTestBed, { mask: [
        '(',
        /[1-9]/,
        /\d/,
        /\d/,
        ')',
        ' ',
        /\d/,
        /\d/,
        /\d/,
        '-',
        /\d/,
        /\d/,
        /\d/,
        /\d/,
    ], id: "date-id", name: "date-name", value: "8024442131" }));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFza2VkSW5wdXQuc3Rvcmllcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL01hc2tlZElucHV0L01hc2tlZElucHV0LnN0b3JpZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsT0FBTyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQzFCLE9BQU8sRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxHQUFHLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRS9DLGVBQWU7SUFDYixLQUFLLEVBQUUsbUJBQW1CO0lBQzFCLFNBQVMsRUFBRSxXQUFXO0NBQ3ZCLENBQUM7QUFFRixNQUFNLGFBQWEsR0FBRyxDQUFDLEVBQXNDLEVBQUUsRUFBRTtRQUExQyxFQUFFLEtBQUssRUFBRSxZQUFZLEdBQUcsRUFBRSxPQUFZLEVBQVAsS0FBSyxjQUFwQyxTQUFzQyxDQUFGO0lBQ3pELE1BQU0sQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN2RCxPQUFPLENBQ0wsb0JBQUMsR0FBRyxJQUFDLFNBQVMsRUFBQyxLQUFLO1FBQ2xCLG9CQUFDLEdBQUcsSUFBQyxLQUFLLEVBQUMsUUFBUSxFQUFDLEdBQUcsRUFBQyxPQUFPO1lBQzdCLG9CQUFDLFdBQVcsa0JBQ1YsS0FBSyxFQUFFLEtBQUssRUFDWixRQUFRLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUM1QyxLQUFLLEVBQ1QsQ0FDRSxDQUNGLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxFQUFFO0lBQ3hCLE1BQU0sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFFLE9BQU8sQ0FDTCxvQkFBQyxHQUFHLElBQUMsU0FBUyxFQUFDLEtBQUs7UUFDbEIsb0JBQUMsR0FBRyxJQUFDLEtBQUssRUFBQyxRQUFRO1lBQ2pCLG9CQUFDLFdBQVcsa0JBQ1YsSUFBSSxFQUFFLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQ2hFLFdBQVcsRUFDVCxvQkFBQyxHQUFHLElBQUMsR0FBRyxFQUFDLE9BQU87b0JBQ2Qsb0JBQUMsUUFBUSxJQUNQLElBQUksRUFBQyxPQUFPLEVBQ1osSUFBSSxFQUFFLElBQUksRUFDVixRQUFRLEVBQUUsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FDMUQsQ0FDRSxFQUVSLEtBQUssRUFBRSxJQUFJLEVBQ1gsUUFBUSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFDM0MsS0FBSyxFQUNULENBQ0UsQ0FDRixDQUNQLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLFdBQVcsR0FBRyxHQUFHLEVBQUU7SUFDdkIsTUFBTSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLE9BQU8sQ0FDTCxvQkFBQyxHQUFHLElBQUMsU0FBUyxFQUFDLEtBQUs7UUFDbEIsb0JBQUMsR0FBRyxJQUFDLEtBQUssRUFBQyxRQUFRO1lBQ2pCLG9CQUFDLFdBQVcsSUFDVixLQUFLLEVBQUUsTUFBTSxFQUNiLFFBQVEsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUNqRSxJQUFJLEVBQUUsV0FBVyxDQUFDLGdCQUFnQixDQUFDO29CQUNqQyxZQUFZLEVBQUUsSUFBSTtpQkFDbkIsQ0FBQyxFQUNGLE9BQU8sRUFBRTtvQkFDUDt3QkFDRSxJQUFJLEVBQUUsb0JBQUMsR0FBRyxPQUFHO3dCQUNiLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztxQkFDckM7b0JBQ0Q7d0JBQ0UsSUFBSSxFQUFFLG9CQUFDLFFBQVEsT0FBRzt3QkFDbEIsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO3FCQUNyQztpQkFDRixHQUNELENBQ0UsQ0FDRixDQUNQLENBQUM7QUFDSixDQUFDLENBQUM7QUFDRixNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FDeEIsb0JBQUMsYUFBYSxJQUNaLEtBQUssRUFBQyxZQUFZLEVBQ2xCLElBQUksRUFBRTtRQUNKLEdBQUc7UUFDSCxPQUFPO1FBQ1AsSUFBSTtRQUNKLElBQUk7UUFDSixHQUFHO1FBQ0gsR0FBRztRQUNILElBQUk7UUFDSixJQUFJO1FBQ0osSUFBSTtRQUNKLEdBQUc7UUFDSCxJQUFJO1FBQ0osSUFBSTtRQUNKLElBQUk7UUFDSixJQUFJO0tBQ0wsR0FDRCxDQUNILENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FDN0Isb0JBQUMsYUFBYSxJQUNaLFNBQVMsRUFBQyxTQUFTLEVBQ25CLElBQUksRUFBRSxXQUFXLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLEVBQ3RDLEtBQUssRUFBQyxVQUFVLEdBQ2hCLENBQ0gsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxHQUFHLEVBQUUsQ0FBQyxvQkFBQyxTQUFTLElBQUMsUUFBUSxFQUFFLElBQUksR0FBSSxDQUFDO0FBQzVELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxHQUFHLEVBQUUsQ0FBQyxvQkFBQyxTQUFTLE9BQUcsQ0FBQztBQUUvQyxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsR0FBRyxFQUFFLENBQUMsb0JBQUMsV0FBVyxPQUFHLENBQUM7QUFFN0MsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQ3pCLG9CQUFDLGFBQWEsSUFDWixLQUFLLEVBQUMsWUFBWSxFQUNsQixJQUFJLEVBQUU7UUFDSixHQUFHO1FBQ0gsT0FBTztRQUNQLElBQUk7UUFDSixJQUFJO1FBQ0osR0FBRztRQUNILEdBQUc7UUFDSCxJQUFJO1FBQ0osSUFBSTtRQUNKLElBQUk7UUFDSixHQUFHO1FBQ0gsSUFBSTtRQUNKLElBQUk7UUFDSixJQUFJO1FBQ0osSUFBSTtLQUNMLEVBQ0QsS0FBSyxFQUFFLElBQUksR0FDWCxDQUNILENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FDbEMsb0JBQUMsYUFBYSxJQUNaLEtBQUssRUFBQyxZQUFZLEVBQ2xCLElBQUksRUFBRTtRQUNKLEdBQUc7UUFDSCxPQUFPO1FBQ1AsSUFBSTtRQUNKLElBQUk7UUFDSixHQUFHO1FBQ0gsR0FBRztRQUNILElBQUk7UUFDSixJQUFJO1FBQ0osSUFBSTtRQUNKLEdBQUc7UUFDSCxJQUFJO1FBQ0osSUFBSTtRQUNKLElBQUk7UUFDSixJQUFJO0tBQ0wsRUFDRCxLQUFLLEVBQUUsSUFBSSxFQUNYLGNBQWMsRUFBRSxJQUFJLEdBQ3BCLENBQ0gsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUN4QixvQkFBQyxhQUFhLElBQ1osV0FBVyxFQUFDLG1DQUFtQyxFQUMvQyxJQUFJLEVBQUU7UUFDSixHQUFHO1FBQ0gsR0FBRztRQUNILEdBQUc7UUFDSCxHQUFHO1FBQ0gsT0FBTztRQUNQLElBQUk7UUFDSixJQUFJO1FBQ0osR0FBRztRQUNILEdBQUc7UUFDSCxJQUFJO1FBQ0osSUFBSTtRQUNKLElBQUk7UUFDSixHQUFHO1FBQ0gsSUFBSTtRQUNKLElBQUk7UUFDSixJQUFJO1FBQ0osSUFBSTtLQUNMLEdBQ0QsQ0FDSCxDQUFDO0FBQ0YsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQ3pCLG9CQUFDLGFBQWEsSUFDWixLQUFLLEVBQUMsWUFBWSxFQUNsQixLQUFLLEVBQUUsS0FBSyxFQUNaLElBQUksRUFBRTtRQUNKLEdBQUc7UUFDSCxPQUFPO1FBQ1AsSUFBSTtRQUNKLElBQUk7UUFDSixHQUFHO1FBQ0gsR0FBRztRQUNILElBQUk7UUFDSixJQUFJO1FBQ0osSUFBSTtRQUNKLEdBQUc7UUFDSCxJQUFJO1FBQ0osSUFBSTtRQUNKLElBQUk7UUFDSixJQUFJO0tBQ0wsRUFDRCxLQUFLLEVBQUUsSUFBSSxFQUNYLGNBQWMsRUFBRSxJQUFJLEdBQ3BCLENBQ0gsQ0FBQztBQUNGLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUN4QixvQkFBQyxhQUFhLElBQ1osSUFBSSxFQUFFO1FBQ0osV0FBVyxDQUFDLFVBQVU7UUFDdEIsV0FBVyxDQUFDLEtBQUs7UUFDakIsV0FBVyxDQUFDLFVBQVU7UUFDdEIsR0FBRztRQUNILFdBQVcsQ0FBQyxLQUFLO1FBQ2pCLFdBQVcsQ0FBQyxVQUFVO1FBQ3RCLFdBQVcsQ0FBQyxLQUFLO0tBQ2xCLEVBQ0QsSUFBSSxFQUFFLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN2QixLQUFLLEVBQUUsY0FBYyxDQUFDLFdBQVcsRUFBRTtLQUNwQyxDQUFDLEVBQ0YsV0FBVyxFQUFDLFNBQVMsRUFDckIsZUFBZSxFQUFFLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEdBQ3hELENBQ0gsQ0FBQztBQUNGLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUNuQyxvQkFBQyxhQUFhLElBQ1osSUFBSSxFQUFFO1FBQ0osR0FBRztRQUNILE9BQU87UUFDUCxJQUFJO1FBQ0osSUFBSTtRQUNKLEdBQUc7UUFDSCxHQUFHO1FBQ0gsSUFBSTtRQUNKLElBQUk7UUFDSixJQUFJO1FBQ0osR0FBRztRQUNILElBQUk7UUFDSixJQUFJO1FBQ0osSUFBSTtRQUNKLElBQUk7S0FDTCxFQUNELGVBQWUsRUFBRSxXQUFXLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxFQUN4RCxLQUFLLEVBQUMsWUFBWSxHQUNsQixDQUNILENBQUM7QUFDRixNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUNyQyxvQkFBQyxhQUFhLElBQ1osSUFBSSxFQUFFO1FBQ0osR0FBRztRQUNILE9BQU87UUFDUCxJQUFJO1FBQ0osSUFBSTtRQUNKLEdBQUc7UUFDSCxHQUFHO1FBQ0gsSUFBSTtRQUNKLElBQUk7UUFDSixJQUFJO1FBQ0osR0FBRztRQUNILElBQUk7UUFDSixJQUFJO1FBQ0osSUFBSTtRQUNKLElBQUk7S0FDTCxFQUNELGlCQUFpQixFQUFFLElBQUksRUFDdkIsS0FBSyxFQUFDLFlBQVksR0FDbEIsQ0FDSCxDQUFDO0FBQ0YsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQzVCLG9CQUFDLGFBQWEsSUFDWixJQUFJLEVBQUU7UUFDSixHQUFHO1FBQ0gsT0FBTztRQUNQLElBQUk7UUFDSixJQUFJO1FBQ0osR0FBRztRQUNILEdBQUc7UUFDSCxJQUFJO1FBQ0osSUFBSTtRQUNKLElBQUk7UUFDSixHQUFHO1FBQ0gsSUFBSTtRQUNKLElBQUk7UUFDSixJQUFJO1FBQ0osSUFBSTtLQUNMLEVBQ0QsUUFBUSxFQUFFLElBQUksRUFDZCxLQUFLLEVBQUMsWUFBWSxHQUNsQixDQUNILENBQUM7QUFDRixNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FDL0Isb0JBQUMsYUFBYSxJQUNaLElBQUksRUFBRTtRQUNKLEdBQUc7UUFDSCxPQUFPO1FBQ1AsSUFBSTtRQUNKLElBQUk7UUFDSixHQUFHO1FBQ0gsR0FBRztRQUNILElBQUk7UUFDSixJQUFJO1FBQ0osSUFBSTtRQUNKLEdBQUc7UUFDSCxJQUFJO1FBQ0osSUFBSTtRQUNKLElBQUk7UUFDSixJQUFJO0tBQ0wsRUFDRCxXQUFXLEVBQUMsZ0JBQWdCLEVBQzVCLEtBQUssRUFBQyxZQUFZLEdBQ2xCLENBQ0gsQ0FBQztBQUNGLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUN4QixvQkFBQyxhQUFhLElBQ1osSUFBSSxFQUFFO1FBQ0osR0FBRztRQUNILE9BQU87UUFDUCxJQUFJO1FBQ0osSUFBSTtRQUNKLEdBQUc7UUFDSCxHQUFHO1FBQ0gsSUFBSTtRQUNKLElBQUk7UUFDSixJQUFJO1FBQ0osR0FBRztRQUNILElBQUk7UUFDSixJQUFJO1FBQ0osSUFBSTtRQUNKLElBQUk7S0FDTCxFQUNELEVBQUUsRUFBQyxTQUFTLEVBQ1osSUFBSSxFQUFDLFdBQVcsRUFDaEIsS0FBSyxFQUFDLFlBQVksR0FDbEIsQ0FDSCxDQUFDIn0=