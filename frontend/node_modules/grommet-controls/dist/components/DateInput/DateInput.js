var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { Component } from 'react';
import { Box, Calendar } from 'grommet';
import { Calendar as CalendarIcon } from 'grommet-icons/icons/Calendar';
import { MaskedInput } from '../MaskedInput';
import { smallDate } from '../../utils/moment';
/**
 * A masked date entry field with a drop down calendar<br/>
 * All properties of MaskedInput apply<br/>
 * `import { DateInput } from 'grommet-controls';`<br/>
 * `<DateInput value={...} />`<br/>
 */
class DateInput extends Component {
    constructor() {
        super(...arguments);
        this.upDateValue = null;
        this.onSelect = isoDate => {
            const date = new Date(isoDate);
            this.upDateValue(smallDate(date));
        };
    }
    render() {
        const _a = this.props, { value, bounds, dates, disabledDates, autocorrect, firstDayOfWeek, locale, size, mask: userMask, maskFormat } = _a, rest = __rest(_a, ["value", "bounds", "dates", "disabledDates", "autocorrect", "firstDayOfWeek", "locale", "size", "mask", "maskFormat"]);
        let mask;
        if (userMask) {
            mask = { mask: userMask };
        }
        else if (autocorrect) {
            mask = {
                mask: [/\d/, /\d/, '/', /\d/, /\d/, '/', /\d/, /\d/, /\d/, /\d/],
                pipe: MaskedInput.createAutoCorrectedDatePipe(maskFormat),
                keepCharPositions: true,
            };
        }
        else {
            mask = {
                mask: [/\d/, /\d/, '/', /\d/, /\d/, '/', /\d/, /\d/, /\d/, /\d/],
            };
        }
        const controlledValue = value === undefined ? '' : value;
        return (React.createElement(MaskedInput, Object.assign({ update: update => {
                this.upDateValue = update;
            }, value: controlledValue, dropContent: React.createElement(Box, { pad: "small" },
                React.createElement(Calendar, { date: controlledValue.toString(), onSelect: this.onSelect, bounds: bounds, dates: dates, disabled: disabledDates, firstDayOfWeek: firstDayOfWeek, locale: locale, size: size })) }, Object.assign(Object.assign({}, rest), mask))));
    }
}
DateInput.defaultProps = {
    dropIcon: React.createElement(CalendarIcon, null),
    size: 'small',
    a11yDropTitle: 'Open calendar',
};
export { DateInput };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0ZUlucHV0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvRGF0ZUlucHV0L0RhdGVJbnB1dC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxPQUFPLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUN6QyxPQUFPLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUN4QyxPQUFPLEVBQUUsUUFBUSxJQUFJLFlBQVksRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHL0M7Ozs7O0dBS0c7QUFFSCxNQUFNLFNBQVUsU0FBUSxTQUEwQjtJQUFsRDs7UUFPRSxnQkFBVyxHQUFHLElBQUksQ0FBQztRQUVuQixhQUFRLEdBQUcsT0FBTyxDQUFDLEVBQUU7WUFDbkIsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDL0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNwQyxDQUFDLENBQUM7SUF1REosQ0FBQztJQXJEQyxNQUFNO1FBQ0osTUFBTSxLQVlGLElBQUksQ0FBQyxLQUFLLEVBWlIsRUFDSixLQUFLLEVBQ0wsTUFBTSxFQUNOLEtBQUssRUFDTCxhQUFhLEVBQ2IsV0FBVyxFQUNYLGNBQWMsRUFDZCxNQUFNLEVBQ04sSUFBSSxFQUNKLElBQUksRUFBRSxRQUFRLEVBQ2QsVUFBVSxPQUVFLEVBRFQsSUFBSSxjQVhILHNIQVlMLENBQWEsQ0FBQztRQUNmLElBQUksSUFBSSxDQUFDO1FBQ1QsSUFBSSxRQUFRLEVBQUU7WUFDWixJQUFJLEdBQUcsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLENBQUM7U0FDM0I7YUFBTSxJQUFJLFdBQVcsRUFBRTtZQUN0QixJQUFJLEdBQUc7Z0JBQ0wsSUFBSSxFQUFFLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDO2dCQUNoRSxJQUFJLEVBQUUsV0FBVyxDQUFDLDJCQUEyQixDQUFDLFVBQVUsQ0FBQztnQkFDekQsaUJBQWlCLEVBQUUsSUFBSTthQUN4QixDQUFDO1NBQ0g7YUFBTTtZQUNMLElBQUksR0FBRztnQkFDTCxJQUFJLEVBQUUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUM7YUFDakUsQ0FBQztTQUNIO1FBQ0QsTUFBTSxlQUFlLEdBQUcsS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDekQsT0FBTyxDQUNMLG9CQUFDLFdBQVcsa0JBQ1YsTUFBTSxFQUFFLE1BQU0sQ0FBQyxFQUFFO2dCQUNmLElBQUksQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDO1lBQzVCLENBQUMsRUFDRCxLQUFLLEVBQUUsZUFBZSxFQUN0QixXQUFXLEVBQ1Qsb0JBQUMsR0FBRyxJQUFDLEdBQUcsRUFBQyxPQUFPO2dCQUNkLG9CQUFDLFFBQVEsSUFDUCxJQUFJLEVBQUUsZUFBZSxDQUFDLFFBQVEsRUFBRSxFQUNoQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFDdkIsTUFBTSxFQUFFLE1BQU0sRUFDZCxLQUFLLEVBQUUsS0FBSyxFQUNaLFFBQVEsRUFBRSxhQUFhLEVBQ3ZCLGNBQWMsRUFBRSxjQUFjLEVBQzlCLE1BQU0sRUFBRSxNQUFNLEVBQ2QsSUFBSSxFQUFFLElBQUksR0FDVixDQUNFLG9DQUVDLElBQUksR0FBSyxJQUFJLEdBQ3RCLENBQ0gsQ0FBQztJQUNKLENBQUM7O0FBakVNLHNCQUFZLEdBQUc7SUFDcEIsUUFBUSxFQUFFLG9CQUFDLFlBQVksT0FBRztJQUMxQixJQUFJLEVBQUUsT0FBTztJQUNiLGFBQWEsRUFBRSxlQUFlO0NBQy9CLENBQUM7QUFnRUosT0FBTyxFQUFFLFNBQVMsRUFBRSxDQUFDIn0=