import React from 'react';
import { ScatterChart } from './ScatterChart';
import { rndDatasets2d } from '../data/data';
export default {
    title: 'chartjs/ScatterChart',
    component: ScatterChart,
};
export const main = () => (React.createElement(ScatterChart, { data: {
        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
        datasets: [
            {
                label: 'Dataset 1',
                data: [
                    { x: -74, y: 60 },
                    { x: -42, y: -96 },
                    { x: -67, y: -19 },
                    { x: 26, y: 77 },
                    { x: 64, y: -61 },
                    { x: -58, y: -71 },
                    { x: 99, y: -47 },
                ],
            },
            {
                label: 'Dataset 2',
                data: [
                    { x: -8, y: 36 },
                    { x: -84, y: -30 },
                    { x: 71, y: -86 },
                    { x: -91, y: 68 },
                    { x: 89, y: -59 },
                    { x: -73, y: -20 },
                    { x: 32, y: 17 },
                ],
            },
        ],
    } }));
export const data = () => React.createElement(ScatterChart, { data: rndDatasets2d() });
export const multiAxis = () => (React.createElement(ScatterChart, { data: rndDatasets2d(2, [{ yAxisID: 'y-axis-0' }, { yAxisID: 'y-axis-1' }]), options: {
        hoverMode: 'nearest',
        intersect: true,
        tooltips: {
            mode: 'index',
            intersect: true,
        },
        scales: {
            xAxes: [
                {
                    position: 'bottom',
                    gridLines: {
                        zeroLineColor: 'rgba(0,0,0,1)',
                    },
                },
            ],
            yAxes: [
                {
                    type: 'linear',
                    display: true,
                    position: 'left',
                    id: 'y-axis-0',
                },
                {
                    type: 'linear',
                    display: true,
                    position: 'right',
                    reverse: true,
                    id: 'y-axis-1',
                    gridLines: {
                        drawOnChartArea: false,
                    },
                },
            ],
        },
    } }));
export const logarithmicScale = () => (React.createElement(ScatterChart, { data: rndDatasets2d(1), options: {
        scales: {
            xAxes: [
                {
                    type: 'logarithmic',
                    position: 'bottom',
                    ticks: {
                        userCallback(tick) {
                            // eslint-disable-next-line no-mixed-operators
                            const remain = tick / 10 ** Math.floor(Math.log10(tick));
                            if (remain === 1 || remain === 2 || remain === 5) {
                                return `${tick.toString()} y`;
                            }
                            return '';
                        },
                    },
                    scaleLabel: {
                        labelString: 'x-axis',
                        display: true,
                    },
                },
            ],
            yAxes: [
                {
                    type: 'linear',
                    ticks: {
                        userCallback(tick) {
                            return `${tick.toString()} units`;
                        },
                    },
                    scaleLabel: {
                        labelString: 'y-axis',
                        display: true,
                    },
                },
            ],
        },
    } }));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2NhdHRlckNoYXJ0LnN0b3JpZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY2hhcnRqcy9TY2F0dGVyQ2hhcnQvU2NhdHRlckNoYXJ0LnN0b3JpZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMxQixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUU3QyxlQUFlO0lBQ2IsS0FBSyxFQUFFLHNCQUFzQjtJQUM3QixTQUFTLEVBQUUsWUFBWTtDQUN4QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQ3hCLG9CQUFDLFlBQVksSUFDWCxJQUFJLEVBQUU7UUFDSixNQUFNLEVBQUUsQ0FBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUM7UUFDeEUsUUFBUSxFQUFFO1lBQ1I7Z0JBQ0UsS0FBSyxFQUFFLFdBQVc7Z0JBQ2xCLElBQUksRUFBRTtvQkFDSixFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO29CQUNqQixFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7b0JBQ2xCLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFDbEIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7b0JBQ2hCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7b0JBQ2pCLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxD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